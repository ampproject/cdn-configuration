# Reusable workflow for promote jobs.

on:
  workflow_call:
    inputs:
      channel-name:
        description: 'Human readable name of the channel to promote'
        required: true
        type: string
      ts-file:
        description: 'TypeScript file to execute (with .ts), under scripts/'
        required: true
        type: string
      amp-version:
        description: 'Optional AMP version number (13 digits) to pass. Not all promotion require this, some will default to promoting based on the current version of other channels.'
        required: false
        default: ''
        type: string
      auto-merge:
        description: 'Leave this box checked to enable the PR to auto-merge when all checks have passed.'
        required: true
        # This really should be boolean but GitHub Actions struggles with passing a boolean to a reusable workflow.
        default: 'false'
        type: string
    outputs:
      amp-version:
        description: 'Promoted AMP version, which is either the given input or taken from configs/versions.json'
        value: ${{ jobs.promote.outputs.amp-version }}
    secrets:
      access-token:
        description: 'Personal access token for the bot that will create the pull requests'
        required: true

jobs:
  promote:
    if: github.repository == 'ampproject/cdn-configuration'
    name: Promote ${{ inputs.channel-name }} Channel
    runs-on: ubuntu-latest
    outputs:
      amp-version: ${{ steps.promote-step.outputs.amp-version }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set Up Node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install Dependencies
        run: npm ci

      - name: ⭐ Promote ${{ inputs.channel-name }} Channel ⭐
        id: promote-step
        run: |
          npx ts-node scripts/${{ inputs.ts-file }} --amp_version=${{ inputs.amp-version }} --auto_merge=${{ inputs.auto-merge }}
          echo "::set-output name=amp-version::${{ env.AMP_VERSION }}"
        env:
          AMP_VERSION: ${{ inputs.amp-version }}
          ACCESS_TOKEN: ${{ secrets.access-token }}

  create-issue-on-error:
    if: failure()
    needs: promote
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Create issue on error
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/create_issue_on_error.md
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          MENTION: '@ampproject/release-on-duty'
          REPO_SLUG: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
