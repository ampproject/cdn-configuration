name: Post promote tasks

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - 'configs/versions.json'

jobs:
  setup:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    outputs:
      npm: ${{ steps.get-tasks.outputs.npm }}
      calendar: ${{ steps.get-tasks.outputs.calendar }}
      tagger: ${{ steps.get-tasks.outputs.tagger }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Get tasks
        id: get-tasks
        run: |
          HEAD=${{ github.event.pull_request.merge_commit_sha }}
          BASE=$(git rev-parse $HEAD^)
          npx ts-node ./scripts/post-promote-tasks-job.ts --head="$HEAD" --base="$BASE" --title="${{ github.event.pull_request.title }}"

  npm-publish:
    needs: setup
    if: needs.setup.outputs.npm
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.npm) }}
      fail-fast: false
    steps:
      - name: Trigger publish-npm-packages workflow on amphtml
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.github.com/repos/ampproject/amphtml/actions/workflows/publish-npm-packages.yml/dispatches'
          bearerToken: ${{ secrets.ACCESS_TOKEN }}
          data: >
            {
              "ref": "main",
              "inputs":
              {
                "amp-version": "${{ matrix.includes.amp-version }}",
                "tag": "${{ matrix.includes.tag }}"
              }
            }

  release-calendar:
    needs: setup
    if: needs.setup.outputs.calendar
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.calendar) }}
      fail-fast: false
    steps:
      - name: Create event on release calendar
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{ secrets.CALENDAR_URI }}'
          customHeaders: '{"Authorization": "Basic ${{ secrets.CALENDAR_TOKEN }}"}'
          data: >
            {
              "release":
              {
                "name": "${{ matrix.includes.amp-version }}"
              },
              "promotion":
              {
                "releaseName": "${{ matrix.includes.amp-version }}",
                "time": "$(date +'%Y-%m-%d %H:%M:%S %Z')",
                "channel": "${{ matrix.includes.channel }}"
              }
            }

  release-tagger:
    needs: setup
    if: needs.setup.outputs.tagger
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.tagger) }}
      fail-fast: false
    steps:
      - name: Trigger release tagger workflow on amphtml
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.github.com/repos/ampproject/amphtml/actions/workflows/release-tagger.yml/dispatches'
          bearerToken: ${{ secrets.ACCESS_TOKEN }}
          data: >
            {
              "ref": "main",
              "inputs":
              {
                "action": "${{ matrix.includes.action }}",
                "head": "${{ matrix.includes.head }}",
                "base": "${{ matrix.includes.base }}",
                "channel": "${{ matrix.includes.channel }}",
                "sha": "${{ matrix.includes.sha }}"
              }
            }

  create-issue-on-error:
    if: failure()
    needs: [setup, npm-publish, release-calendar]
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create issue on error
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/create_issue_on_error.md
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          MENTION: '@estherkim' #TODO(estherkim): switch to infra team once debug complete
          REPO_SLUG: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
